name: Flutter

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - name: Setup Flutter
      uses: subosito/flutter-action@v1
      with:
        channel: dev
    - name: Setup Coverage
      uses: stelynx/dart-full-coverage@v1.0.3
      with:
        package: brick_app
    - name: Install pub packages
      run: flutter pub get
    - name: Generate Code with build_runner
      run: flutter pub run build_runner build
    - name: Analyze Dart Code
      run: flutter analyze .
    - name: Test with coverage
      run: flutter test --coverage
    - name: Build Android APK
      run: flutter build apk
    - name: Build web version
      run: flutter build web --release
    - name: Upload built Android APK
      uses: actions/upload-artifact@v1
      with:
        name: release-apk
        path: build/app/outputs/apk/release/app-release.apk
    - name: Upload built web version
      uses: actions/upload-artifact@v1
      with:
        name: release-web
        path: build/web
    - name: Upload generated coverage reports
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage/lcov.info
    - name: Deploy to web version to S3
      uses: reggionick/s3-deploy@v3
      with:
        folder: build/web
        bucket: ${{ secrets.S3_BUCKET }}
        bucket-region: ${{ secrets.S3_BUCKET_REGION }}
        dist-id: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
        invalidation: /
        delete-removed: true
        no-cache: true
        private: true
